<?php
/**
 * @file
 * Contains install and update functions for SendGrid Integration
 */
use SendGrid\Client;
/**
 * Implemenets hook_enable().
 */
function sendgrid_integration_enable() {
  $config = config('system.mail');
  $config->set('mail_system', ['default-system' => 'SendGridMailSystem']);
  $config->save();
}

/**
 * Implements hook_disable().
 */
function sendgrid_integration_disable() {
  $config = config('system.mail');
  $config->set('mail_system', ['default-system' => 'DefaultMailSystem']);
  $config->save();
}

/**
 * Implements hook_install().
 */
function sendgrid_integration_install() {
  $t = get_t();
  backdrop_set_message($t('You can configure SendGrid settings under Administer > Configuration > !link',
    [
    '!link' => l($t('SendGrid settings'), 'admin/config/system/sendgrid'),
  ]
  ));
}

/**
 * Implements hook_requirements().
 */
function sendgrid_integration_requirements($phase) {
  $requirements = [];
  $apikey = config_get('sendgrid_integration.settings', 'sendgrid_integration_apikey');
  switch ($phase) {
    case 'install':
      $dir = backdrop_get_path('module', 'sendgrid_integration') . '/vendor/composer';
      if (module_exists('xautoload') && file_exists($dir)) {
        xautoload()->adapter->composerDir($dir);
      }
      if (!class_exists(Client::class)) {
        $requirements['sendgrid_integration'] = [
          'title' => t('SendGrid API Wrapper'),
          'value' => t('API Wrapper Library Missing'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('You need to install the SendGrid API wrapper via one of the two methods documented in the README.md of the module.'),
        ];
      }
      else {
        $requirements['sendgrid_integration'] = [
          'title' => t('SendGrid API Wrapper'),
          'severity' => REQUIREMENT_OK,
          'value' => t('API wrapper installed.'),
        ];
      }
      break;
    case 'runtime':
      if (empty($apikey)) {
        $requirements['sendgrid_integration'] = [
          'title' => t('SendGrid Integration Settings'),
          'value' => t('API Key Not Set'),
          'severity' => REQUIREMENT_ERROR,
          'description' => t('You need to <a href="@url">add a SendGrid API Secret Key</a> for Backdrop to be able to deliver mail through SendGrid Integration.', [
            '@url' => url('admin/config/services/sendgrid'),
          ]),
        ];
      }
      else {
        $requirements['sendgrid_integration'] = [
          'title' => t('SendGrid Integration Settings'),
          'severity' => REQUIREMENT_OK,
          'value' => t('API Secret Key saved'),
        ];
      }
      break;
  }
  return $requirements;
}

/**
 * Implements hook_update_last_removed().
 */
function sendgrid_integration_update_last_removed() {
  return 7002;
}

/**
 * Migrate sendgrid_integration variables to config.
 */
function sendgrid_integration_update_1000() {
  $config = config('sendgrid_integration.settings');
  $config->set('sendgrid_integration_apikey', update_variable_get('sendgrid_integration_apikey', ''));
  $config->set('sendgrid_integration_maillog_log', update_variable_get('sendgrid_integration_maillog_log', TRUE));
  $config->set('sendgrid_integration_maillog_devel', update_variable_get('sendgrid_integration_maillog_devel', TRUE));
  $config->set('sendgrid_integration_test_defaults', update_variable_get('sendgrid_integration_test_defaults', []));
  $config->save();

  update_variable_del('sendgrid_integration_apikey');
  update_variable_del('sendgrid_integration_maillog_log');
  update_variable_del('sendgrid_integration_maillog_devel');
  update_variable_del('sendgrid_integration_test_defaults');
}
